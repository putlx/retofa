let wasm;let cachedTextDecoder=new TextDecoder('utf-8',{ignoreBOM:true,fatal:true});cachedTextDecoder.decode();let cachegetUint8Memory0=null;function getUint8Memory0(){if(cachegetUint8Memory0===null||cachegetUint8Memory0.buffer!==wasm.memory.buffer){cachegetUint8Memory0=new Uint8Array(wasm.memory.buffer);}
return cachegetUint8Memory0;}
function getStringFromWasm0(ptr,len){return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr,ptr+len));}
const heap=new Array(32).fill(undefined);heap.push(undefined,null,true,false);let heap_next=heap.length;function addHeapObject(obj){if(heap_next===heap.length)heap.push(heap.length+1);const idx=heap_next;heap_next=heap[idx];heap[idx]=obj;return idx;}
function getObject(idx){return heap[idx];}
function dropObject(idx){if(idx<36)return;heap[idx]=heap_next;heap_next=idx;}
function takeObject(idx){const ret=getObject(idx);dropObject(idx);return ret;}
export function main(){wasm.main();}
function _assertClass(instance,klass){if(!(instance instanceof klass)){throw new Error(`expected instance of ${klass.name}`);}
return instance.ptr;}
let cachegetInt32Memory0=null;function getInt32Memory0(){if(cachegetInt32Memory0===null||cachegetInt32Memory0.buffer!==wasm.memory.buffer){cachegetInt32Memory0=new Int32Array(wasm.memory.buffer);}
return cachegetInt32Memory0;}
let WASM_VECTOR_LEN=0;let cachedTextEncoder=new TextEncoder('utf-8');const encodeString=(typeof cachedTextEncoder.encodeInto==='function'?function(arg,view){return cachedTextEncoder.encodeInto(arg,view);}:function(arg,view){const buf=cachedTextEncoder.encode(arg);view.set(buf);return{read:arg.length,written:buf.length};});function passStringToWasm0(arg,malloc,realloc){if(realloc===undefined){const buf=cachedTextEncoder.encode(arg);const ptr=malloc(buf.length);getUint8Memory0().subarray(ptr,ptr+buf.length).set(buf);WASM_VECTOR_LEN=buf.length;return ptr;}
let len=arg.length;let ptr=malloc(len);const mem=getUint8Memory0();let offset=0;for(;offset<len;offset++){const code=arg.charCodeAt(offset);if(code>0x7F)break;mem[ptr+offset]=code;}
if(offset!==len){if(offset!==0){arg=arg.slice(offset);}
ptr=realloc(ptr,len,len=offset+arg.length*3);const view=getUint8Memory0().subarray(ptr+offset,ptr+len);const ret=encodeString(arg,view);offset+=ret.written;}
WASM_VECTOR_LEN=offset;return ptr;}
export class AST{static __wrap(ptr){const obj=Object.create(AST.prototype);obj.ptr=ptr;return obj;}
__destroy_into_raw(){const ptr=this.ptr;this.ptr=0;return ptr;}
free(){const ptr=this.__destroy_into_raw();wasm.__wbg_ast_free(ptr);}}
export class DFA{static __wrap(ptr){const obj=Object.create(DFA.prototype);obj.ptr=ptr;return obj;}
__destroy_into_raw(){const ptr=this.ptr;this.ptr=0;return ptr;}
free(){const ptr=this.__destroy_into_raw();wasm.__wbg_dfa_free(ptr);}
constructor(ast){_assertClass(ast,AST);var ptr0=ast.ptr;ast.ptr=0;var ret=wasm.dfa_new(ptr0);return DFA.__wrap(ret);}
toDot(){try{const ptr=this.__destroy_into_raw();const retptr=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.dfa_toDot(retptr,ptr);var r0=getInt32Memory0()[retptr/4+0];var r1=getInt32Memory0()[retptr/4+1];var r2=getInt32Memory0()[retptr/4+2];var r3=getInt32Memory0()[retptr/4+3];var ptr0=r0;var len0=r1;if(r3){ptr0=0;len0=0;throw takeObject(r2);}
return getStringFromWasm0(ptr0,len0);}finally{wasm.__wbindgen_add_to_stack_pointer(16);wasm.__wbindgen_free(ptr0,len0);}}}
export class EpsilonNFA{static __wrap(ptr){const obj=Object.create(EpsilonNFA.prototype);obj.ptr=ptr;return obj;}
__destroy_into_raw(){const ptr=this.ptr;this.ptr=0;return ptr;}
free(){const ptr=this.__destroy_into_raw();wasm.__wbg_epsilonnfa_free(ptr);}
constructor(ast){_assertClass(ast,AST);var ptr0=ast.ptr;ast.ptr=0;var ret=wasm.epsilonnfa_new(ptr0);return EpsilonNFA.__wrap(ret);}
toDot(){try{const ptr=this.__destroy_into_raw();const retptr=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.epsilonnfa_toDot(retptr,ptr);var r0=getInt32Memory0()[retptr/4+0];var r1=getInt32Memory0()[retptr/4+1];var r2=getInt32Memory0()[retptr/4+2];var r3=getInt32Memory0()[retptr/4+3];var ptr0=r0;var len0=r1;if(r3){ptr0=0;len0=0;throw takeObject(r2);}
return getStringFromWasm0(ptr0,len0);}finally{wasm.__wbindgen_add_to_stack_pointer(16);wasm.__wbindgen_free(ptr0,len0);}}}
export class NFA{static __wrap(ptr){const obj=Object.create(NFA.prototype);obj.ptr=ptr;return obj;}
__destroy_into_raw(){const ptr=this.ptr;this.ptr=0;return ptr;}
free(){const ptr=this.__destroy_into_raw();wasm.__wbg_nfa_free(ptr);}
constructor(ast){_assertClass(ast,AST);var ptr0=ast.ptr;ast.ptr=0;var ret=wasm.nfa_new(ptr0);return NFA.__wrap(ret);}
toDot(){try{const ptr=this.__destroy_into_raw();const retptr=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.nfa_toDot(retptr,ptr);var r0=getInt32Memory0()[retptr/4+0];var r1=getInt32Memory0()[retptr/4+1];var r2=getInt32Memory0()[retptr/4+2];var r3=getInt32Memory0()[retptr/4+3];var ptr0=r0;var len0=r1;if(r3){ptr0=0;len0=0;throw takeObject(r2);}
return getStringFromWasm0(ptr0,len0);}finally{wasm.__wbindgen_add_to_stack_pointer(16);wasm.__wbindgen_free(ptr0,len0);}}}
export class Parser{static __wrap(ptr){const obj=Object.create(Parser.prototype);obj.ptr=ptr;return obj;}
__destroy_into_raw(){const ptr=this.ptr;this.ptr=0;return ptr;}
free(){const ptr=this.__destroy_into_raw();wasm.__wbg_parser_free(ptr);}
constructor(){var ret=wasm.parser_new();return Parser.__wrap(ret);}
parse(re,single_char_token){try{const ptr=this.__destroy_into_raw();const retptr=wasm.__wbindgen_add_to_stack_pointer(-16);var ptr0=passStringToWasm0(re,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc);var len0=WASM_VECTOR_LEN;wasm.parser_parse(retptr,ptr,ptr0,len0,single_char_token);var r0=getInt32Memory0()[retptr/4+0];var r1=getInt32Memory0()[retptr/4+1];var r2=getInt32Memory0()[retptr/4+2];if(r2){throw takeObject(r1);}
return AST.__wrap(r0);}finally{wasm.__wbindgen_add_to_stack_pointer(16);}}}
async function load(module,imports){if(typeof Response==='function'&&module instanceof Response){if(typeof WebAssembly.instantiateStreaming==='function'){try{return await WebAssembly.instantiateStreaming(module,imports);}catch(e){if(module.headers.get('Content-Type')!='application/wasm'){console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e);}else{throw e;}}}
const bytes=await module.arrayBuffer();return await WebAssembly.instantiate(bytes,imports);}else{const instance=await WebAssembly.instantiate(module,imports);if(instance instanceof WebAssembly.Instance){return{instance,module};}else{return instance;}}}
async function init(input){if(typeof input==='undefined'){input=new URL('retofa_bg.wasm',import.meta.url);}
const imports={};imports.wbg={};imports.wbg.__wbindgen_error_new=function(arg0,arg1){var ret=new Error(getStringFromWasm0(arg0,arg1));return addHeapObject(ret);};imports.wbg.__wbg_new_693216e109162396=function(){var ret=new Error();return addHeapObject(ret);};imports.wbg.__wbg_stack_0ddaca5d1abfb52f=function(arg0,arg1){var ret=getObject(arg1).stack;var ptr0=passStringToWasm0(ret,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc);var len0=WASM_VECTOR_LEN;getInt32Memory0()[arg0/4+1]=len0;getInt32Memory0()[arg0/4+0]=ptr0;};imports.wbg.__wbg_error_09919627ac0992f5=function(arg0,arg1){try{console.error(getStringFromWasm0(arg0,arg1));}finally{wasm.__wbindgen_free(arg0,arg1);}};imports.wbg.__wbindgen_object_drop_ref=function(arg0){takeObject(arg0);};imports.wbg.__wbindgen_throw=function(arg0,arg1){throw new Error(getStringFromWasm0(arg0,arg1));};if(typeof input==='string'||(typeof Request==='function'&&input instanceof Request)||(typeof URL==='function'&&input instanceof URL)){input=fetch(input);}
const{instance,module}=await load(await input,imports);wasm=instance.exports;init.__wbindgen_wasm_module=module;wasm.__wbindgen_start();return wasm;}
export default init;